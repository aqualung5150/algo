stages:
  - build
  - deploy
#  - test

variables:
  IMAGE_NAME: myapi
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  SSH_OPTS: "-o StrictHostKeyChecking=no -i /etc/gitlab-runner/algo-ec2.pem"

before_script:
  - echo "üèóÔ∏è Gradle ÎπåÎìú ÌôòÍ≤Ω ÏÑ§Ï†ï"
  - mkdir -p src/main/resources
  - mkdir -p src/test/resources
  - cp /etc/gitlab-runner/config/application-app.yml src/main/resources/application.yml
  - cp /etc/gitlab-runner/config/application-test.yml src/test/resources/application.yml
  - chmod +x ./gradlew

build:
  stage: build
  tags:
    - local
  script:
    - ./gradlew clean bootJar
    - docker build -t $IMAGE_NAME:$DOCKER_TAG .
    - docker save $IMAGE_NAME:$DOCKER_TAG -o $IMAGE_NAME.tar
  artifacts:
    paths:
      - $IMAGE_NAME.tar
    expire_in: 1 hour
  when: manual

#  TODO
deploy:
  stage: deploy
  only:
    - master
  script:
#    - chmod 400 $EC2_SSH_KEY
    - scp $SSH_OPTS $IMAGE_NAME.tar ec2-user@$EC2_HOST:/home/ec2-user/
#    - ssh $SSH_OPTS ec2-user@$EC2_HOST 'bash -s' < deploy-blue-green.sh $IMAGE_NAME $DOCKER_TAG
  when: manual

#test:
#  stage: test
#  script:
#    - mkdir -p src/test/resources
#    - echo "$TEST_CONFIG" > src/test/resources/application.yml
#    - gradle test
#  only:
#    - main